@using InventoryManagement.Web.ViewModels
@using InventoryManagement.Web.DTOs
@using InventoryManagement.Web.Controllers
@model ProfileViewModel

@{
    ViewData["Title"] = "My Profile";
}

<h1 class="mb-4">My Profile</h1>

<div class="row">
    <div class="col-md-12">
        <h2 class="h4">Inventories I Own</h2>
        @if (Model.OwnedInventories != null && Model.OwnedInventories.Any())
        {
            <table class="table table-striped table-hover" id="owned-inventories-table">
                <thead>
                    <tr>
                        <th data-sort="title">Title</th>
                        <th data-sort="createdAt">Created At</th>
                        <th data-sort="itemCount">Items Count</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var inventory in Model.OwnedInventories)
                    {
                        <tr>
                            <td>
                                <a asp-controller="Inventory" asp-action="Details" asp-route-id="@inventory.Id">@inventory.Title</a>
                            </td>
                            <td>@inventory.CreatedAt.ToShortDateString()</td>
                            <td>@inventory.ItemCount</td>
                        </tr>
                    }
                </tbody>
            </table> 
        }
        else
        {
            <div class="alert alert-info">
                You don't own any inventories yet. <a asp-controller="Inventory" asp-action="Create">Create one!</a>
            </div>
        }
    </div>
</div>
<div class="row mt-4">
    <div class="col-md-12">
        <h2 class="h4">Inventories with Write Access</h2>
        @if (Model.WriteAccessInventories != null && Model.WriteAccessInventories.Any())
        {
            <table class="table table-striped table-hover" id="write-access-inventories-table">
                <thead>
                    <tr>
                        <th data-sort="title">Title</th>
                        <th data-sort="creator">Creator</th>
                        <th data-sort="itemCount">Items Count</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var inventory in Model.WriteAccessInventories)
                    {
                        <tr>
                            <td>
                                <a asp-controller="Inventory" asp-action="Details" asp-route-id="@inventory.Id">@inventory.Title</a>
                            </td>
                            <td>@inventory.CreatorName</td>
                            <td>@inventory.ItemCount</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="alert alert-info">
                You do not have write access to any inventories.
            </div>
        }
    </div>
</div>
<hr />
<div class="row mt-4">
    <div class="col-md-12">
        <h2 class="h4">Salesforce</h2>
        <div class="card p-3">
            <p>Enter your information to connect your account.</p>
            <form asp-action="StartSalesforceConnect" asp-controller="Profile" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group mb-3">
                    <label asp-for="SalesforceProfile.CompanyName" class="form-label"></label>
                    <input asp-for="SalesforceProfile.CompanyName" class="form-control" />
                    <span asp-validation-for="SalesforceProfile.CompanyName" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="SalesforceProfile.FirstName" class="form-label"></label>
                    <input asp-for="SalesforceProfile.FirstName" class="form-control" />
                    <span asp-validation-for="SalesforceProfile.FirstName" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="SalesforceProfile.LastName" class="form-label"></label>
                    <input asp-for="SalesforceProfile.LastName" class="form-control" />
                    <span asp-validation-for="SalesforceProfile.LastName" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="SalesforceProfile.Email" class="form-label"></label>
                    <input asp-for="SalesforceProfile.Email" class="form-control" />
                    <span asp-validation-for="SalesforceProfile.Email" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="SalesforceProfile.AccountSite" class="form-label">Account Site</label>
                    <input asp-for="SalesforceProfile.AccountSite" class="form-control" />
                    <span asp-validation-for="SalesforceProfile.AccountSite" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="SalesforceProfile.Phone" class="form-label"></label>
                    <input asp-for="SalesforceProfile.Phone" class="form-control" />
                    <span asp-validation-for="SalesforceProfile.Phone" class="text-danger"></span>
                </div>
                <button type="submit" class="btn btn-primary">Connect to Salesforce</button>
                @Html.AntiForgeryToken()
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const successMessage = '@(TempData["SuccessMessage"])';
            const errorMessage = '@(TempData["ErrorMessage"])';
            
            if (successMessage) {
                showToast(successMessage, 'success');
            }
            if (errorMessage) {
                showToast(errorMessage, 'danger');
            }
        });
        
        function showToast(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show fixed-bottom m-3`;
            alertDiv.style.zIndex = 1050;

            alertDiv.innerHTML = `
                <strong>${type === 'success' ? 'Success' : 'Error'}</strong> ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
            document.body.appendChild(alertDiv);

            setTimeout(() => {
                const alertInstance = bootstrap.Alert.getInstance(alertDiv);
                if (alertInstance) {
                    alertInstance.close();
                }
            }, 5000);
        }
    </script>
}
